<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoxi.gm.mapper.DepartmentMapper">
    <resultMap id="dept_map" type="com.ruoxi.gm.domain.Department">
        <id property="id" column="id"/>
        <result property="sn" column="sn"/>
        <result property="name" column="name"/>
        <result property="dirPath" column="dirPath"/>
        <result property="state" column="state"/>
        <association property="manager" javaType="com.ruoxi.gm.domain.Employee">
            <id property="id" column="eid"/>
            <result property="username" column="ename"/>
        </association>
        <association property="parent" javaType="com.ruoxi.gm.domain.Department">
            <id property="id" column="did"/>
            <result property="name" column="dname"/>
        </association>
    </resultMap>

    <!--void save(Department d);-->
    <insert id="save">
        insert into t_department (id, sn, name, dirPath, state, manager_id, parent_id)
        values (#{id}, #{sn}, #{name}, #{dirPath}, #{state}, #{manager.id}, #{parent.id});
    </insert>
    <!--void remove(Long id);-->
    <delete id="remove">
        delete
        from t_department
        where id = #{id};
    </delete>
    <!--void update(Department d);-->
    <update id="update">
        update t_department
        set sn         = #{sn},
            name       = #{name},
            dirPath    = #{dirPath},
            state      = #{state},
            manager_id = #{manager.id},
            parent_id  = #{parent.id}
        where id = #{id};
    </update>
    <!--List<Department> loadAll();-->
    <select id="loadAll" resultMap="dept_map">
        SELECT
            td.id,
            td.sn,
            td.`name`,
            td.dirPath,
            td.state,
            td.manager_id,
            td.parent_id,
            te.username ename,
            te.id eid,
            td2.id did,
            td2.`name` dname
        FROM
            t_department td
            left join t_employee te on td.manager_id = te.id
            left join t_department td2 on td.parent_id = td2.id
        <where>
            <!--<if test="id != null and id.trim() != ''">
                and td.id = #{id}
            </if>-->
            <if test="name != null and name.trim() != ''">
                and td.name like concat('%',#{name},'%')
            </if>
            <if test="state != null">
                and td.state = #{state}
            </if>
            <if test="manager != null and manager.username != null and manager.username.trim() != ''">
                and te.username like concat('%',#{manager.username},'%')
            </if>
        </where>
    </select>
</mapper>
